{"version":3,"file":"src_app_modules_manager-product_manager-product_module_ts.js","mappings":"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","sources":["./src/app/modules/manager-product/add-product/add-product.component.ts","./src/app/modules/manager-product/add-product/add-product.component.html","./src/app/modules/manager-product/manager-product-routing.module.ts","./src/app/modules/manager-product/manager-product.component.ts","./src/app/modules/manager-product/manager-product.component.html","./src/app/modules/manager-product/manager-product.module.ts","./src/app/modules/manager-product/model/Product.model.ts","./src/app/services/product.service.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, Inject, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { AddCategoryComponent } from '../../manager-category/add-category/add-category.component';\nimport { ProductService } from 'src/app/services/product.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ProductM } from '../model/Product.model'\nimport { CategoryService } from 'src/app/services/category.service';\nimport { Category, CategoryResponse } from '../interface/product.interface';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss']\n})\nexport class AddProductComponent {\n  addProductForm: any = FormGroup;\n  categories: Category[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<AddCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private productService: ProductService,\n    private snackbarService: SnackbarService,\n    private ngxService: NgxUiLoaderService,\n    private categoryService: CategoryService,\n  ) {\n    this.getAllCategories();\n  }\n\n  ngOnInit() {\n    this.addProductForm = this.fb.group({\n      name: [this.data.name ? this.data.name : null, [Validators.required]],\n      category: [this.data.category ? this.data.category : null, [Validators.required]],\n      price: [this.data.price ? this.data.price : null, [Validators.required]],\n      description: [this.data.description ? this.data.description : null, [Validators.required]]\n    })\n  }\n\n  getAllCategories() {\n    this.ngxService.start();\n    this.categoryService.getAll().subscribe(\n      (res: any) => {\n        this.ngxService.stop();\n        this.categories = res;\n      },\n      (err: any) => {\n        this.ngxService.stop();\n      })\n  }\n\n  handleAddProduct() {\n    let payload = new ProductM(this.addProductForm.getRawValue())\n    this.ngxService.start();\n    this.productService.add(payload).subscribe(\n      (res: any) => {\n        this.dialogRef.close(res.message);\n      },\n      (err: any) => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        setTimeout(() => {\n          this.snackbarService.openSnackBar(GlobalConstants.genericError, GlobalConstants.error);\n        }, 500);\n      }\n    )\n  }\n\n  handleUpdateProduct() {\n    let payload = {\n      name: this.addProductForm.get('name').value,\n      id: this.data['id']\n    }\n    this.ngxService.start();\n    this.productService.update(payload).subscribe(\n      (res: any) => {\n        this.dialogRef.close(res.message);\n      },\n      (err: any) => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        setTimeout(() => {\n          this.snackbarService.openSnackBar(GlobalConstants.genericError, GlobalConstants.error);\n        }, 500);\n      }\n    )\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content class=\"container\">\n    <form [formGroup]=\"addProductForm\">\n        <mat-form-field appearance=\"outline\" class=\"w-100 mt-3\">\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\">\n            <mat-error>\n                <span *ngIf=\"addProductForm.controls.name.errors?.required\">\n                    {{'required-or-invalid-field.mandatory' | translate}}\n                </span>\n            </mat-error>\n        </mat-form-field>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <mat-form-field appearance=\"outline\" class=\"w-100 mt-3\">\n                    <mat-label>Category</mat-label>\n                    <mat-select formControlName=\"category\">\n                        <mat-option *ngFor=\"let item of categories\" [value]=\"item.id\">\n                            {{item.name}}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>\n                        <span *ngIf=\"addProductForm.controls.category.errors?.required\">\n                            {{'required-or-invalid-field.mandatory' | translate}}\n                        </span>\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-6\">\n                <mat-form-field appearance=\"outline\" class=\"w-100 mt-3\">\n                    <mat-label>Price</mat-label>\n                    <input type=\"number\" matInput formControlName=\"price\">\n                    <mat-error>\n                        <span *ngIf=\"addProductForm.controls.price.errors?.required\">\n                            {{'required-or-invalid-field.mandatory' | translate}}\n                        </span>\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-100 mt-3\">\n            <mat-label>Description</mat-label>\n            <input matInput formControlName=\"description\">\n            <mat-error>\n                <span *ngIf=\"addProductForm.controls.description.errors?.required\">\n                    {{'required-or-invalid-field.mandatory' | translate}}\n                </span>\n            </mat-error>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions class=\"mat-dialog-actions\">\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n    <ng-template [ngIf]=\"data.title === 'Add Product'\">\n        <button mat-button color=\"primary\" (click)=\"handleAddProduct()\" [disabled]=\"!addProductForm.valid\">Add</button>\n    </ng-template>\n    <ng-template [ngIf]=\"data.title === 'Update Product'\">\n        <button mat-button color=\"primary\" (click)=\"handleUpdateProduct()\"\n            [disabled]=\"!addProductForm.valid\">Update</button>\n    </ng-template>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ManagerProductComponent } from './manager-product.component';\n\nconst routes: Routes = [{ path: '', component: ManagerProductComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagerProductRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ProductI } from './interface/product.interface';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { AddProductComponent } from './add-product/add-product.component';\n\n@Component({\n  selector: 'app-manager-product',\n  templateUrl: './manager-product.component.html',\n  styleUrls: ['./manager-product.component.scss']\n})\nexport class ManagerProductComponent {\n  displayedColumns: string[] = ['name', 'category', 'description', 'price', 'action'];\n  dataSource: MatTableDataSource<ProductI>;\n  responseMessage: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private ngxService: NgxUiLoaderService,\n    public dialog: MatDialog,\n    private snackbarService: SnackbarService,\n    private productService: ProductService\n  ) {\n    this.getAllProducts();\n  }\n\n  async getAllProducts(): Promise<boolean> {\n    this.ngxService.start();\n\n    try {\n      const res: any = await this.productService.getAllProducts().toPromise();\n      this.ngxService.stop();\n\n      const products: ProductI[] = res;\n      this.dataSource = new MatTableDataSource(products);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n      return true;\n    } catch (error: any) {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.tokenInvalid;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      return false;\n    }\n  }\n\n  openDialogAdd(enterAnimationDuration: string, exitAnimationDuration: string, type?: string, name?: string, id?: string) {\n    const title = type === 'add' ? 'Add Product' : 'Update Product';\n    const dialogRef = this.dialog.open(AddProductComponent, {\n      width: '550px',\n      enterAnimationDuration,\n      exitAnimationDuration,\n      data: {\n        title: title,\n        name: name,\n        id: id\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(async (message) => {\n      if (message) {\n        try {\n          const isReturn: boolean = await this.getAllProducts();\n          if (isReturn) {\n            this.snackbarService.openSnackBar(message, '');\n          }\n        } catch (error) {\n          this.snackbarService.openSnackBar('Error occurred while fetching categories', GlobalConstants.error);\n        }\n      }\n    })\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<button mat-raised-button color=\"primary\" class=\"mg-bottom\" (click)=\"openDialogAdd('300ms', '1500ms', 'add')\">\n    Add Product\n</button>\n<mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"category\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> category </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.categoryName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> description </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> price </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.price}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\n            <td mat-cell *matCellDef=\"let row; let i = index\">\n                <div class=\"action-container\">\n                    <button mat-mini-fab color=\"primary\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                    <button mat-mini-fab color=\"warn\" class=\"mg-left\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n                    <mat-slide-toggle class=\"mg-left\"></mat-slide-toggle>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5]\" aria-label=\"Select page of users\"></mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManagerProductRoutingModule } from './manager-product-routing.module';\nimport { ManagerProductComponent } from './manager-product.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AddProductComponent } from './add-product/add-product.component';\n\n\n@NgModule({\n  declarations: [\n    ManagerProductComponent,\n    AddProductComponent\n  ],\n  imports: [\n    CommonModule,\n    ManagerProductRoutingModule,\n    SharedModule\n  ]\n})\nexport class ManagerProductModule { }\n","import { ProductPayloadI } from '../interface/product.interface';\r\n\r\nexport class ProductM {\r\n    name: string | null;\r\n    categoryId: number | null;\r\n    description: string | null;\r\n    price: number | null;\r\n\r\n    constructor(data: ProductPayloadI) {\r\n        this.name = data && data.name || null;\r\n        this.categoryId = data && data.category || null;\r\n        this.description = data && data.description || null;\r\n        this.price = data && data.price || null;\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  url = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  add(data: any) {\n    return this.http.post(this.url + `/product/add`, data);\n  }\n\n  update(data: any) {\n    return this.http.patch(this.url + `/product/update`, data);\n  }\n\n  getAllProducts() {\n    return this.http.get(this.url + `/product/get`);\n  }\n\n  updateStatus(data: any) {\n    return this.http.patch(this.url + `/product/updateStatus`, data);\n  }\n\n  delete(id: number) {\n    return this.http.delete(this.url + `/product/delete/${id}`);\n  }\n}\n"],"names":["FormGroup","Validators","MAT_DIALOG_DATA","GlobalConstants","ProductM","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","item_r7","id","name","ɵɵlistener","AddProductComponent_ng_template_35_Template_button_click_0_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","handleAddProduct","ctx_r5","addProductForm","valid","AddProductComponent_ng_template_36_Template_button_click_0_listener","_r11","ctx_r10","handleUpdateProduct","ctx_r6","AddProductComponent","constructor","dialogRef","data","fb","productService","snackbarService","ngxService","categoryService","categories","getAllCategories","ngOnInit","group","required","category","price","description","start","getAll","subscribe","res","stop","err","payload","getRawValue","add","close","message","setTimeout","openSnackBar","genericError","error","get","value","update","onNoClick","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","ProductService","i4","SnackbarService","i5","NgxUiLoaderService","i6","CategoryService","selectors","decls","vars","consts","template","AddProductComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AddProductComponent_span_9_Template","AddProductComponent_mat_option_16_Template","AddProductComponent_span_18_Template","AddProductComponent_span_25_Template","AddProductComponent_span_31_Template","AddProductComponent_Template_button_click_33_listener","AddProductComponent_ng_template_35_Template","AddProductComponent_ng_template_36_Template","ɵɵtextInterpolate","title","controls","errors","RouterModule","ManagerProductComponent","routes","path","component","ManagerProductRoutingModule","forChild","imports","exports","MatTableDataSource","MatPaginator","MatSort","row_r13","row_r14","categoryName","row_r15","row_r16","dialog","displayedColumns","getAllProducts","_this","_asyncToGenerator","toPromise","products","dataSource","paginator","sort","responseMessage","tokenInvalid","openDialogAdd","enterAnimationDuration","exitAnimationDuration","type","_this2","open","width","afterClosed","_ref","isReturn","_x","apply","arguments","applyFilter","event","filterValue","target","filter","trim","toLowerCase","firstPage","MatDialog","viewQuery","ManagerProductComponent_Query","ManagerProductComponent_Template_button_click_0_listener","ManagerProductComponent_Template_input_keyup_5_listener","$event","ɵɵelementContainerStart","ManagerProductComponent_th_10_Template","ManagerProductComponent_td_11_Template","ɵɵelementContainerEnd","ManagerProductComponent_th_13_Template","ManagerProductComponent_td_14_Template","ManagerProductComponent_th_16_Template","ManagerProductComponent_td_17_Template","ManagerProductComponent_th_19_Template","ManagerProductComponent_td_20_Template","ManagerProductComponent_th_22_Template","ManagerProductComponent_td_23_Template","ManagerProductComponent_tr_24_Template","ManagerProductComponent_tr_25_Template","ɵɵpureFunction0","_c0","CommonModule","SharedModule","ManagerProductModule","declarations","categoryId","environment","http","url","apiUrl","post","patch","updateStatus","delete","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}