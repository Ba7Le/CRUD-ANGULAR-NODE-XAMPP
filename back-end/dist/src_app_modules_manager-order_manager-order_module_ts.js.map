{"version":3,"file":"src_app_modules_manager-order_manager-order_module_ts.js","mappings":"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","sources":["./src/app/modules/manager-order/manager-order-routing.module.ts","./src/app/modules/manager-order/manager-order.component.ts","./src/app/modules/manager-order/manager-order.component.html","./src/app/modules/manager-order/manager-order.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ManagerOrderComponent } from './manager-order.component';\n\nconst routes: Routes = [{ path: '', component: ManagerOrderComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagerOrderRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { saveAs } from 'file-saver';\n\n\n@Component({\n  selector: 'app-manager-order',\n  templateUrl: './manager-order.component.html',\n  styleUrls: ['./manager-order.component.scss']\n})\nexport class ManagerOrderComponent {\n  displayedColumns: string[] = ['name', 'category', 'price', 'quantity', 'total', 'delete'];\n  dataSource: any = [];\n  manageOrderForm: any = FormGroup;\n  categories: any = [];\n  products: any = [];\n  price: any;\n  totalAmount: number = 0;\n  responseMessage: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private fb: FormBuilder,\n    private productService: ProductService,\n    private categoryService: CategoryService,\n    private snacbarService: SnackbarService,\n    private billService: BillService,\n    private ngxService: NgxUiLoaderService\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.getCategories();\n    this.manageOrderForm = this.fb.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n      email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n      contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)]],\n      paymentMethod: [null, [Validators.required]],\n      product: [null, [Validators.required]],\n      category: [null, [Validators.required]],\n      quantity: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      total: [0, [Validators.required]]\n    })\n  }\n\n  getCategories() {\n    this.categoryService.getAll().subscribe((res: any) => {\n      this.ngxService.stop();\n      this.categories = res;\n    }, (err: any) => {\n      this.ngxService.stop();\n      if (err.error?.message) {\n        this.responseMessage = err.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snacbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  getProductByCategory(value: any) {\n    this.manageOrderForm.patchValue({\n      product: null\n    })\n    this.productService.getProductsByCategory(value.id).subscribe((res: any) => {\n      this.products = res;\n      this.manageOrderForm.patchValue({\n        price: '',\n        quantity: '',\n        total: 0\n      })\n    }, (err: any) => {\n      this.ngxService.stop();\n      if (err.error?.message) {\n        this.responseMessage = err.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snacbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  getProductDetails(value: any) {\n    this.productService.getById(value.id).subscribe((res: any) => {\n      this.price = res.price;\n      this.manageOrderForm.patchValue({\n        price: res.price,\n        quantity: '1',\n        total: this.price * 1\n      })\n    }, (err: any) => {\n      this.ngxService.stop();\n      if (err.error?.message) {\n        this.responseMessage = err.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snacbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  setQuantity(value: any) {\n    let quantity = this.manageOrderForm.get('quantity')?.value;\n    let price = this.manageOrderForm.get('price')?.value;\n    if (quantity > 0) {\n      this.manageOrderForm.patchValue({\n        total: quantity * price\n      })\n    } else if (quantity !== '') {\n      this.manageOrderForm.patchValue({\n        quantity: 1,\n        total: 1 * price\n      })\n    }\n  }\n\n  validateProductAdd() {\n    let total = this.manageOrderForm.get('total')?.value;\n    let quantity = this.manageOrderForm.get('quantity')?.value;\n    if (total === 0 || total === null || quantity <= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  validateSubmit() {\n    let name = this.manageOrderForm.get('name')?.value;\n    let email = this.manageOrderForm.get('email')?.value;\n    let emailValid = this.manageOrderForm.get('email')?.valid;\n    let contactNumber = this.manageOrderForm.get('contactNumber')?.value;\n    let contactNumberValid = this.manageOrderForm.get('contactNumber')?.valid;\n    let paymentMethod = this.manageOrderForm.get('paymentMethod')?.value;\n    if (\n      this.totalAmount === 0 ||\n      name === null ||\n      email === null ||\n      contactNumber === null ||\n      paymentMethod === null ||\n      !contactNumberValid ||\n      !emailValid\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  add() {\n    var formData = this.manageOrderForm.value;\n    var productName = this.dataSource.find((e: { id: number; }) => e.id === formData.product.id);\n    if (productName === undefined) {\n      this.totalAmount = this.totalAmount + formData.total;\n      this.dataSource.push(\n        {\n          id: formData.product.id,\n          name: formData.product.name,\n          category: formData.category.name,\n          quantity: formData.quantity,\n          price: formData.price,\n          total: formData.total\n        }\n      );\n      this.dataSource = [...this.dataSource];\n      this.snacbarService.openSnackBar(GlobalConstants.productAdd, \"success\");\n    } else {\n      this.snacbarService.openSnackBar(GlobalConstants.productExistError, GlobalConstants.error);\n    }\n  }\n\n  handleDeleteAction(value: any, element: any) {\n    this.totalAmount = this.totalAmount - element.total;\n    this.dataSource.splice(value, 1);\n    this.dataSource = [...this.dataSource];\n  }\n\n  submitAction() {\n    this.ngxService.start();\n    var formData = this.manageOrderForm.value;\n    var data = {\n      name: formData.name,\n      email: formData.email,\n      contactNumber: formData.contactNumber,\n      paymentMethod: formData.paymentMethod,\n      totalAmount: this.totalAmount,\n      productDetails: JSON.stringify(this.dataSource)\n    }\n    this.billService.generateReport(data).subscribe((res: any) => {\n      this.downloadFile(res?.uuid);\n      this.manageOrderForm.reset();\n      this.dataSource = [];\n      this.totalAmount = 0;\n    }, (err: any) => {\n      this.ngxService.stop();\n      if (err.error?.message) {\n        this.responseMessage = err.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snacbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  downloadFile(fileName: any) {\n    var data = {\n      uuid: fileName\n    }\n    this.billService.getPdf(data).subscribe((res: any) => {\n      saveAs(res, fileName + '.pdf');\n      this.ngxService.stop();\n    })\n  }\n}\n","<div class=\"order-container\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title class=\"black-color\">Manager Order</mat-card-title>\n        </mat-card-header>\n        <mat-card-actions align=\"end\">\n            <button mat-raised-button color=\"primary\" [disabled]=\"validateSubmit()\" (click)=\"submitAction()\">\n                Submit & Get Bill\n            </button>\n        </mat-card-actions>\n    </mat-card>\n\n    <form [formGroup]=\"manageOrderForm\">\n        <mat-card class=\"mt-3 black-color\">\n            <mat-card-header>\n                <mat-card-title>Customer Details:</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row mt-3\">\n                    <div class=\"col-3\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Name</mat-label>\n                            <input matInput formControlName=\"name\">\n                            <mat-error *ngIf=\"manageOrderForm.controls.name.touched &&\n                                manageOrderForm.controls.name.invalid\">\n                                <span *ngIf=\"manageOrderForm.controls.name.errors?.required\">\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                                <span *ngIf=\"manageOrderForm.controls.name.errors?.pattern\">\n                                    This field is invalid\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-3\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Email</mat-label>\n                            <input matInput formControlName=\"email\">\n                            <mat-error *ngIf=\"manageOrderForm.controls.email.touched &&\n                                manageOrderForm.controls.email.invalid\">\n                                <span *ngIf=\"manageOrderForm.controls.email.errors?.required\">\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                                <span *ngIf=\"manageOrderForm.controls.email.errors?.pattern\">\n                                    This field is invalid\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-3\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Contact Name</mat-label>\n                            <input matInput formControlName=\"contactNumber\">\n                            <mat-error *ngIf=\"manageOrderForm.controls.contactNumber.touched &&\n                                manageOrderForm.controls.contactNumber.invalid\">\n                                <span *ngIf=\"manageOrderForm.controls.contactNumber.errors?.required\">\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                                <span *ngIf=\"manageOrderForm.controls.contactNumber.errors?.pattern\">\n                                    This field is invalid\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-3\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Payment Method</mat-label>\n                            <mat-select formControlName=\"paymentMethod\">\n                                <mat-option [value]=\"'Cash'\">\n                                    Cash\n                                </mat-option>\n                                <mat-option [value]=\"'Credit Card'\">\n                                    Credit Card\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"manageOrderForm.controls.paymentMethod.touched &&\n                                manageOrderForm.controls.paymentMethod.invalid\">\n                                <span *ngIf=\"manageOrderForm.controls.paymentMethod.errors?.required\">\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"mt-3 black-color\">\n            <mat-card-header>\n                <mat-card-title>Select Product:</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row mt-3\">\n                    <div class=\"col-3\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Category</mat-label>\n                            <mat-select formControlName=\"category\"\n                                (selectionChange)=\"getProductByCategory($event.value)\">\n                                <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n                                    {{category.name}}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                <span>\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-3\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Product</mat-label>\n                            <mat-select formControlName=\"product\" (selectionChange)=\"getProductDetails($event.value)\">\n                                <mat-option *ngFor=\"let product of products\" [value]=\"product\">\n                                    {{product.name}}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                <span>\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Price</mat-label>\n                            <input matInput formControlName=\"price\" readonly>\n                            <mat-error *ngIf=\"manageOrderForm.controls.price.touched &&\n                                manageOrderForm.controls.price.invalid\">\n                                <span *ngIf=\"manageOrderForm.controls.price.errors?.required\">\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Quantity</mat-label>\n                            <input matInput type=\"number\" formControlName=\"quantity\" (keyup)=\"setQuantity($event)\"\n                                #input>\n                            <mat-error *ngIf=\"manageOrderForm.controls.quantity.touched &&\n                                manageOrderForm.controls.quantity.invalid\">\n                                <span *ngIf=\"manageOrderForm.controls.quantity.errors?.required\">\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Total</mat-label>\n                            <input matInput type=\"number\" formControlName=\"total\" readonly>\n                            <mat-error *ngIf=\"manageOrderForm.controls.total.touched &&\n                                manageOrderForm.controls.total.invalid\">\n                                <span *ngIf=\"manageOrderForm.controls.total.errors?.required\">\n                                    {{'required-or-invalid-field.mandatory' | translate}}\n                                </span>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </mat-card-content>\n            <mat-card-actions class=\"d-flex justify-content-between\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"validateProductAdd()\" (click)=\"add()\">Add</button>\n                <button mat-raised-button color=\"warn\">Total Amount: {{totalAmount}}</button>\n            </mat-card-actions>\n        </mat-card>\n    </form>\n\n    <div class=\"mat-elevation-z8 mt-3\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"category\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.categoryName}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"price\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.price}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"quantity\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.quantity}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Total </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.total}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"delete\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\n                <td mat-cell *matCellDef=\"let row; let i = index\">\n                    <div class=\"action-container\">\n                        <button mat-mini-fab color=\"warn\" class=\"mg-left\" (click)=\"handleDeleteAction(i, row)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns; sticky: true\"></tr>\n\n        </table>\n\n        <mat-paginator [pageSizeOptions]=\"[5]\" aria-label=\"Select page of users\"></mat-paginator>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManagerOrderRoutingModule } from './manager-order-routing.module';\nimport { ManagerOrderComponent } from './manager-order.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    ManagerOrderComponent\n  ],\n  imports: [\n    CommonModule,\n    ManagerOrderRoutingModule,\n    SharedModule\n  ]\n})\nexport class ManagerOrderModule { }\n"],"names":["RouterModule","ManagerOrderComponent","routes","path","component","ManagerOrderRoutingModule","forChild","imports","i1","exports","FormGroup","Validators","MatPaginator","MatSort","GlobalConstants","saveAs","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtemplate","ManagerOrderComponent_mat_error_20_span_1_Template","ManagerOrderComponent_mat_error_20_span_2_Template","ɵɵproperty","ctx_r0","manageOrderForm","controls","name","errors","required","pattern","ManagerOrderComponent_mat_error_26_span_1_Template","ManagerOrderComponent_mat_error_26_span_2_Template","ctx_r1","email","ManagerOrderComponent_mat_error_32_span_1_Template","ManagerOrderComponent_mat_error_32_span_2_Template","ctx_r2","contactNumber","ManagerOrderComponent_mat_error_42_span_1_Template","ctx_r3","paymentMethod","category_r33","product_r34","ManagerOrderComponent_mat_error_74_span_1_Template","ctx_r6","price","ManagerOrderComponent_mat_error_81_span_1_Template","ctx_r8","quantity","ManagerOrderComponent_mat_error_87_span_1_Template","ctx_r9","total","row_r38","row_r39","categoryName","row_r40","description","row_r41","row_r42","row_r43","ɵɵlistener","ManagerOrderComponent_td_115_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r47","i_r45","index","row_r44","$implicit","ctx_r46","ɵɵnextContext","ɵɵresetView","handleDeleteAction","ɵɵelement","constructor","fb","productService","categoryService","snacbarService","billService","ngxService","displayedColumns","dataSource","categories","products","totalAmount","ngOnInit","start","getCategories","group","nameRegex","emailRegex","contactNumberRegex","product","category","getAll","subscribe","res","stop","err","error","message","responseMessage","genericError","openSnackBar","getProductByCategory","value","patchValue","getProductsByCategory","id","getProductDetails","getById","setQuantity","get","validateProductAdd","validateSubmit","emailValid","valid","contactNumberValid","add","formData","productName","find","e","undefined","push","productAdd","productExistError","element","splice","submitAction","data","productDetails","JSON","stringify","generateReport","downloadFile","uuid","reset","fileName","getPdf","ɵɵdirectiveInject","FormBuilder","i2","ProductService","i3","CategoryService","i4","SnackbarService","i5","BillService","i6","NgxUiLoaderService","selectors","viewQuery","ManagerOrderComponent_Query","rf","ctx","ManagerOrderComponent_Template_button_click_6_listener","ManagerOrderComponent_mat_error_20_Template","ManagerOrderComponent_mat_error_26_Template","ManagerOrderComponent_mat_error_32_Template","ManagerOrderComponent_mat_error_42_Template","ManagerOrderComponent_Template_mat_select_selectionChange_53_listener","$event","ManagerOrderComponent_mat_option_54_Template","ManagerOrderComponent_Template_mat_select_selectionChange_63_listener","ManagerOrderComponent_mat_option_64_Template","ManagerOrderComponent_mat_error_74_Template","ManagerOrderComponent_Template_input_keyup_79_listener","ManagerOrderComponent_mat_error_81_Template","ManagerOrderComponent_mat_error_87_Template","ManagerOrderComponent_Template_button_click_89_listener","ɵɵelementContainerStart","ManagerOrderComponent_th_96_Template","ManagerOrderComponent_td_97_Template","ɵɵelementContainerEnd","ManagerOrderComponent_th_99_Template","ManagerOrderComponent_td_100_Template","ManagerOrderComponent_th_102_Template","ManagerOrderComponent_td_103_Template","ManagerOrderComponent_th_105_Template","ManagerOrderComponent_td_106_Template","ManagerOrderComponent_th_108_Template","ManagerOrderComponent_td_109_Template","ManagerOrderComponent_th_111_Template","ManagerOrderComponent_td_112_Template","ManagerOrderComponent_th_114_Template","ManagerOrderComponent_td_115_Template","ManagerOrderComponent_tr_116_Template","ManagerOrderComponent_tr_117_Template","touched","invalid","ɵɵpureFunction0","_c0","CommonModule","SharedModule","ManagerOrderModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}