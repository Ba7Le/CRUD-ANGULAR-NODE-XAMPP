{"version":3,"file":"src_app_modules_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/modules/dashboard/dashboard-routing.module.ts","./src/app/modules/dashboard/dashboard.component.ts","./src/app/modules/dashboard/dashboard.component.html","./src/app/modules/dashboard/dashboard.module.ts","./src/app/services/dashboard.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [{ path: '', component: DashboardComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { AfterViewInit, Component } from '@angular/core';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { DashboardService } from 'src/app/services/dashboard.service';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { SpinnerService } from 'src/app/services/spinner.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n\r\n  responseMessage: any;\r\n  data: any;\r\n\r\n  constructor(\r\n    private dashboardService: DashboardService,\r\n    private snackbarService: SnackbarService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {\r\n    this.ngxService.start();\r\n    this.dashboardData();\r\n  }\r\n\r\n  dashboardData() {\r\n    this.dashboardService.getDetail().subscribe((res: any) => {\r\n      this.ngxService.stop();\r\n      this.data = res;\r\n    }, (error: any) => {\r\n      this.ngxService.stop();\r\n      console.log(error);\r\n      if (error.error?.message) {\r\n        this.responseMessage = error.error?.message;\r\n      } else {\r\n        this.responseMessage = GlobalConstants.tokenInvalid;\r\n      }\r\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"dashboard\">\r\n    <div class=\"container\">\r\n        <h2>{{'dashboard-page.dashboard' | translate}}</h2>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{{ 'dashboard-page.category' | translate }}</h5>\r\n                        <p class=\"card-text\">{{ data?.category }}</p>\r\n                        <button class=\"btn btn-primary\">{{ 'button.view-details' | translate }}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{{ 'dashboard-page.product' | translate }}</h5>\r\n                        <p class=\"card-text\">{{ data?.product }}</p>\r\n                        <button class=\"btn btn-primary\">{{ 'button.view-details' | translate }}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{{ 'dashboard-page.bill' | translate }}</h5>\r\n                        <p class=\"card-text\">{{ data?.bill }}</p>\r\n                        <button class=\"btn btn-primary\">{{ 'button.view-details' | translate }}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getDetail() {\r\n    return this.httpClient.get(this.url + \"/dashboard/detail/\");\r\n  }\r\n}\r\n"],"names":["RouterModule","DashboardComponent","routes","path","component","DashboardRoutingModule","forChild","imports","i1","exports","GlobalConstants","constructor","dashboardService","snackbarService","ngxService","start","dashboardData","getDetail","subscribe","res","stop","data","error","console","log","message","responseMessage","tokenInvalid","openSnackBar","i0","ɵɵdirectiveInject","DashboardService","i2","SnackbarService","i3","NgxUiLoaderService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","category","product","bill","CommonModule","SharedModule","DashboardModule","declarations","environment","httpClient","url","apiUrl","get","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}